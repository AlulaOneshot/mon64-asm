#[derive(Debug, Clone)]
pub struct Document {
    pub items: Vec<DocumentItem>,
}

#[derive(Debug, Clone)]
pub enum DocumentItem {
    SectionDirective(String),
    ByteDirective(u64),
    WordDirective(u64),
    DWordDirective(u64),
    QWordDirective(u64),
    Label(String),
    Instruction(Opcode, Vec<Operand>),
}

#[derive(Debug, Clone)]
pub enum Opcode {
    Smemb,
    Smemw,
    Smemd,
    Smemq,
    Lmemb,
    Lmemw,
    Lmemd,
    Lmemq,
    Lli,
    Lui,
    Pushb,
    Pushw,
    Pushd,
    Pushq,
    Popb,
    Popw,
    Popd,
    Popq,
    Pushab,
    Pushaw,
    Pushad,
    Pushaq,
    Popab,
    Popaw,
    Popad,
    Popaq,
    Cbw,
    Cbws,
    Cwd,
    Cwds,
    Cdq,
    Cdqs,
    Movb,
    Movw,
    Movd,
    Movq,
    Addb,
    Addw,
    Addd,
    Addq,
    Addbs,
    Addws,
    Addds,
    Addqs,
    Subb,
    Subw,
    Subd,
    Subq,
    Subbs,
    Subws,
    Subds,
    Subqs,
    Mulb,
    Mulw,
    Muld,
    Mulq,
    Mulbs,
    Mulws,
    Mulds,
    Mulqs,
    Divb,
    Divw,
    Divd,
    Divq,
    Divbs,
    Divws,
    Divds,
    Divqs,
    Incb,
    Incw,
    Incd,
    Incq,
    Incbs,
    Incws,
    Incds,
    Incqs,
    Decb,
    Decw,
    Decd,
    Decq,
    Decbs,
    Decws,
    Decds,
    Decqs,
    Negb,
    Negw,
    Negd,
    Negq,
    Cmpb,
    Cmpw,
    Cmpd,
    Cmpq,
    Cmpbs,
    Cmpws,
    Cmpds,
    Cmpqs,
    Andb,
    Andw,
    Andd,
    Andq,
    Orb,
    Orw,
    Ord,
    Orq,
    Xorb,
    Xorw,
    Xord,
    Xorq,
    Notb,
    Notw,
    Notd,
    Notq,
    Norb,
    Norw,
    Nord,
    Norq,
    Nandb,
    Nandw,
    Nandd,
    Nandq,
    Shlb,
    Shlw,
    Shld,
    Shlq,
    Shrb,
    Shrw,
    Shrd,
    Shrq,
    Rolb,
    Rolw,
    Rold,
    Rolq,
    Rorb,
    Rorw,
    Rord,
    Rorq,
    Bitt,
    Bits,
    Bitc,
    Jmp = 0x0300,
    Jmpeq,
    Jmpz,
    Jmpneq,
    Jmpnz,
    Jmpgt,
    Jmpge,
    Jmplt,
    Jmple,
    Jmpo,
    Jmpn,
    Jmpp,
    Call,
    Ret,
    Int,
    Wfi,
    Rst,
    Inb,
    Inw,
    Ind,
    Inq,
    Outb,
    Outw,
    Outd,
    Outq,
    Nop,
    Cpuid
}

#[derive(Debug, Clone)]
pub enum Operand {
    Immediate(u64),
    Register(String)
}